### NOW ###
    ...

### SOON ###
    add union parser
    implement inline union type parsing
    implement inline enum type parsing

    implement inline function type parsing (function pointers)
        cases for testing
            int (*fooptr)(int a, int b);
            int (**fooptrptr)(int a, int b);
            int (*const*fooptrptrarr[1])(int a, int b);
            int (*fooptr)(int, int);
            int (**fooptrptr)(int, int);
            int (*const*fooptrptrarr[1])(int, int);
            maybe also add test for above inside variable, function and struct parser

    add inline type parsers test
    add test for function pointer type parsing in type parser test

    add typedef parser
        cases for testing
            typedef struct Bar {}; // unnamed typedef
            typedef void (*Foo); // named typedef


### LATER ###
    add patterns for main entity parsers
        maybe extract parser matching to separate service
        or include patterns inside parsers
        or both
        either of these could allow easier unit testing

    add parser test
    add c main entity parsers test
    add statement parser test
    think about renaming NameToken to WordToken
