### NOW ###
    add variable list parser test

    add tests for anonymous variables in function parser
        cases for testing
            void foobar(int, int);
            void foobar(int[]);
            void foobar(int foo[]);

    add tests for function type parsing (function pointers)
        cases for testing
            int (*fooptr)(int a, int b);
            int (**fooptrptr)(int a, int b);
            int (*const*fooptrptrarr[1])(int a, int b);
            int (*fooptr)(int, int);
            int (**fooptrptr)(int, int);
            int (*const*fooptrptrarr[1])(int, int);

        consider if this should be re-tested in type, variable and other parser tests

### SOON ###
    add inline type parsers test

    add typedef parser
        cases for testing
            typedef struct Bar {}; // unnamed typedef
            typedef void (*Foo); // named typedef
            typedef int FooBar[2]; // type array
            typedef void (*FooBar[2])(); // function array


### LATER ###
    vararg support for functions and function pointers

    add patterns for main entity parsers
        maybe extract parser matching to separate service
        or include patterns inside parsers
        or both
        either of these could allow easier unit testing

    add parser test
    add c main entity parsers test
    add statement parser test
    think about renaming NameToken to WordToken
